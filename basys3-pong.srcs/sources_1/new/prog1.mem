001001_10000_000_0000000000 //  0 - LDI R[16] #0			== [Counter setup]
001001_10001_000_0000000000 //  1 - LDI R[17] #0
001000_00000_000_0000000000 //  2 - LD R[0] MEM[0]			== [Start screen loop]
000101_00000_00000_00000010 //  3 - BEQI R[0] #0 2
100000_00000000_0001000001  //  4 - JMP 65					    -> [Reset game]
000010_10000_10000_00000001 //  5 - ADDI R[16] R[16] #1		== [Counter increment]
000101_10000_00000_00001000 //  6 - BEQI R[16] #0 8
100000_00000000_0000000101  //  7 - JMP 5
000010_10001_10001_00000001 //  8 - ADDI R[17] R[17] #1
000101_10001_00000_00001011 //  9 - BEQI R[17] #0 11	
100000_00000000_0000000101  // 10 - JMP 5
000101_00011_00010_00001110 // 11 - BEQI R[3] #2 14			== [Move ball x]
000011_00001_00001_00000001 // 12 - SUBI R[1] R[1] #1
100000_00000000_0000001111  // 13 - JMP 15				
000010_00001_00001_00000001 // 14 - ADDI R[1] R[1] #1
000101_00100_00010_00010011 // 15 - BEQI R[4] #2 19			== [Move ball y]
000011_00010_00010_00000001 // 16 - SUBI R[2] R[2] #1
100000_00000000_0000010011  // 17 - JMP 19				
000010_00010_00010_00000001 // 18 - ADDI R[2] R[2] #1
000101_00010_00000_00010110 // 19 - BEQI R[2] #0 22			== [Check y crash]
000101_00010_11110_00011000 // 20 - BEQI R[2] #30 24
100000_00000000_0000011001  // 21 - JMP 25
001001_00100_000_0000000010 // 22 - LDI R[4] #2
100000_00000000_0000011001  // 23 - JMP 25
001001_00100_000_0000000001 // 24 - LDI R[4] #1
000101_00001_00100_00011100 // 25 - BEQI R[1] #4 28			== [Check x crash]
000101_00001_11001_00101001 // 26 - BEQI R[1] #25 41
100000_00000000_0000111100  // 27 - JMP 60			 			-> [Save to memory]
001000_00101_000_0000000101 // 28 - LD R[5] MEM[5]	**		== [Check paddle 1 hit]
000100_00010_00101_00100111 // 29 - BEQ R[2] R[5] 39
000010_00101_00101_00000001 // 30 - ADDI R[5] #1
000100_00010_00101_00100111 // 31 - BEQ R[2] R[5] 39
000010_00101_00101_00000001 // 32 - ADDI R[5] #1
000100_00010_00101_00100111 // 33 - BEQ R[2] R[5] 39
000010_00101_00101_00000001 // 34 - ADDI R[5] #1
000100_00010_00101_00100111 // 35 - BEQ R[2] R[5] 39
000010_00101_00101_00000001 // 36 - ADDI R[5] #1
000100_00010_00101_00100111 // 37 - BEQ R[2] R[5] 39
100000_00000000_0000111001  // 38 - JMP 57						-> [Add score 2]
001001_00011_000_0000000010 // 39 - LDI R[3] #2				== [Paddle 1 hit]
100000_00000000_0000111100  // 40 - JMP 60
001000_00110_000_0000000110 // 41 - LD R[6] MEM[6]			== [Check paddle 2 hit]
000100_00010_00110_00110100 // 42 - BEQ R[2] R[6] 52
000010_00101_00101_00000001 // 43 - ADDI R[5] #1
000100_00010_00110_00110100 // 44 - BEQ R[2] R[6] 52
000010_00101_00101_00000001 // 45 - ADDI R[5] #1
000100_00010_00110_00110100 // 46 - BEQ R[2] R[6] 52
000010_00101_00101_00000001 // 47 - ADDI R[5] #1
000100_00010_00110_00110100 // 48 - BEQ R[2] R[6] 52
000010_00101_00101_00000001 // 49 - ADDI R[5] #1
000100_00010_00110_00110100 // 50 - BEQ R[2] R[6] 52
100000_00000000_0000110110  // 51 - JMP 54						-> [Add score 1]
001001_00011_000_0000000001 // 52 - LDI R[3] #1				== [Paddle 2 hit]
100000_00000000_0000111100  // 53 - JMP 60						-> [Save to memory]
000010_00111_00111_00000001 // 54 - ADDI R[7] R[7] #1		== [Add score 1]
000101_00111_00101_01010010 // 55 - BEQI R[7] #5 82				-> [Endgame]
100000_00000000_0001000001  // 56 - JMP 65						-> [Reset game]
000010_01000_01000_00000001 // 57 - ADDI R[8] R[8] #1		== [Add score 2]
000101_01000_00101_01010010 // 58 - BEQ*(I) R[8] #5 82				-> [Endgame]
100000_00000000_0001000001  // 59 - JMP 65						-> [Reset game]
010000_00001_000_0000000001 // 60 - ST R[1] MEM[1]			== [Save to memory]
010000_00010_000_0000000010 // 61 - ST R[2] MEM[2]
010000_00111_000_0000000111 // 62 - ST R[7] MEM[7]
010000_01000_000_0000001000 // 63 - ST R[8] MEM[8]
100000_00000000_0000000101  // 64 - JMP 5
001001_00001_000_0000101000 // 65 - LDI R[1] #40			== [Reset game]
001001_00010_000_0000001100 // 66 - LDI R[2] #12
001001_00011_000_0000000001 // 67 - LDI R[3] #1
001001_00100_000_0000000001 // 68 - LDI R[4] #1
001001_00101_000_0000001010 // 69 - LDI R[5] #10
001001_00110_000_0000001010 // 70 - LDI R[6] #10
001001_00111_000_0000000000 // 71 - LDI R[7] #0
001001_01000_000_0000000000 // 72 - LDI R[8] #0
010000_00001_000_0000000001 // 73 - ST R[1] MEM[1]
010000_00010_000_0000000010 // 74 - ST R[2] MEM[2]
010000_00011_000_0000000011 // 75 - ST R[3] MEM[3]
010000_00100_000_0000000100 // 76 - ST R[4] MEM[4]
010000_00101_000_0000000101 // 77 - ST R[5] MEM[5]
010000_00110_000_0000000110 // 78 - ST R[6] MEM[6]
010000_00111_000_0000000111 // 79 - ST R[7] MEM[7]
010000_01000_000_0000001000 // 80 - ST R[8] MEM[8]
100000_00000000_0000000101  // 81 - JMP 5						-> [Counter increment]
001001_00000_000_0000000000 // 82 - LDI R[0] #0				== [Endgame]
010000_00000_000_0000000000 // 83 - ST R[0] MEM[0]
100000_00000000_0000000010  // 84 - JMP 2						-> [Start screen loop]